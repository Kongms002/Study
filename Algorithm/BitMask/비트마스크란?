정수를 이진수로 나타내어 표현하는 것으로 빠르고 용량을 덜 차지한다.

비트 연산

a & b    // AND    000101 & 000011 = 000001 -> 둘다 1이면
a | b    // OR     000101 |  000011 = 000111 -> 둘중 하나가 1이거나 둘다 1인경우
a ^ b    // XOR    000101 ^ 000011 = 000110 -> 둘중 하나만 1인 경우에만
~a       // NOT   ~000101 = 111010 -> 뒤집기(0은1로, 1은0으로)
a << b   // SHIFT  000101 << 000011 = 101000 -> shift  왼쪽으로 밀기
a >> b   // SHIFT  000101 >> 000011 = 000000 -> shift 오른쪽으로 밀기


주의점
<< , >> 이용시 오버플로우 조심, 비트 연산자는 우선순위가 낮으므로 가급적이면 소괄호이용해서 사용
