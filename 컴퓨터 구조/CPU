▶CPU(중앙처리장치) : 메모리에 저장된 명령어 읽고, 해석하고 실행하는 장치
  ■ALU(산술논리연산장치) : 계산을 담당, 레지스터를 통해 피연산자를 받아들이고 제어장치를 통해 제어 신호를 받아들여 결과값을 레지스터에 저장함.
    ●플래그 : 계산 결과값 이외에 추가정보를 말하며 플래그 레지스터에 저장됨.
      ○부호(양수,음수), 제로(0인지), 캐리(올림수,빌림수 발생?), 오버플로우(발생?), 인터럽트(가능한지?), 슈퍼바이저(커널or사용자 모드?) 플래그등이 있음.
  ■레지스터 : 임시 저장 장치(프로그램 속 명령어와 데이터 저장)
    ●프로그램 카운터(명령어 포인터) : 메모리에서 가져올 명령어의 주소를 저장
    ●명령어 레지스터 : 방금 메모리에서 읽어 들인 명령어를 저장(제어장치가 이걸 받아들임)
    ●메모리 주소 레지스터 : 메모리의 주소를 저장
    ●메모리 버퍼 레지스터 : 메모리가 주고받을 값 저장
    ●플래그 레지스터 : 플레그 정보 저장
    ●범용 레지스터 : 자유롭게 여러가지 저장 가능
    ●스택 포인터 : 스택 꼭대기 가리키는 레지스터, 스택 주소 지정 방식에서 사용, 스택 영역은 메모리안에 존재
    ●베이스 레지스터 : 변위 주소 지정 방식(오퍼랜드 값과 특정 레지스터 값을 더해 유효주소 얻는 방식)중 베이스 레지스터 주소 지정 방식에서 베이스 레지스터 값을 더함.
                       상대 주소 지정 방식 에서는 프로그램 카운터 값을 더해서 유효주소를 얻음.  
  ■제어장치 : 제어 신호(부품 관리, 작동시킴)를 보내고, 명령어를 읽고 해석
    ●제어장치가 받아들이고 내보내는 것들
      ○받아들이는 것들 : 클럭(컴퓨터 움직일 수 있게 하는 시간 단위)신호, 해석할 명령어, 플래그 레지스터속 플래그 값, 제어 신호
      ○내보내는 것들 : CPU 외부, 내부로 전달하는 신호

▶명령어 사이클 : CPU에서 명령어들이 실행되는 주기(기본적으로 인출, 실행 이 반복됨)
  ■인출 사이클 : 메모리에 있는 명령어 CPU로 가져오는 단계
  ■실행 사이클 : 가져온 명령어 실행하는 단계
  ■간접 사이클 : 메모리 접근이 필요한 경우 실행하는 단계
▶인터럽트 : CPU작업을 방해하는 신호
  ■동기 인터럽트(예외) : 실행중 오류가 발생하였을 때 발생
  ■비동기 인터럽트(하드웨어 인터럽트) : 입출력장치가 CPU로 신호(알림)를 보내면서 발생
    ●처리 순서
      1. 입출력장치가 CPU에 인터럽트 요청 신호 보냄
      2. CPU는 실행 사이클 끝나고 인출전 인터럽트 여부를 확인함
      3. 인터럽트 여부를 확인하고 인터럽트 플래그를 통해 인터럽트를 받아 들일 수 있는지 확인.
      4. 가능하다면 CPU는 지금 까지 작업을 백업함.
      5. 인터럽트 벡터(서비스 루틴 식별정보)를 참조하여 인터럽트 서비스 루틴(인터럽트 처리 프로그램)을 실행
      6. 루틴이 끝나면 백업한거 복구하고 작업 재개
