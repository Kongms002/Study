코드가 길어지면 선택자도 많이사용하여 복잡해 지므로 쉽게 하기 위해 쓰임

◆고급 선택자

▶하위 선택자 -> 상위 요소 안에 있는 모든 하위 요소를 선택하여 적용
 기본형 : 상위요소 하위요소
 ex)
 section p{
  color:blue;
 }
 
 <section>
  <h1>aa</h1>
  <p> aa</p>
  <div>
    <p>bb</p>
  </div>
 </section>
 <p> cc </p>
 
 -> 상위 요소인 section안에 들어 있는 하위 요소<p>태그(aa,bb)에만 파란색이 적용된다.
 
 
▶자식 선택자 -> 하위 선택자와 비슷하지만 자식 요소에만 적용하고 손자 요소에는 적용하지 않는다.
  기본형 : 부모요소 > 자식요소
ex)
section > p {}

-> 하위 선택자 예시와 같은 코드에서는 (aa)에만 적용이 된다. (bb)는 <div>안에 들어 있어 자식 요소가 아닌 손자 요소


▶인접 형제 선택자 -> 형제 요소중 첫 번째 동생 요소만 적용한다.
 기본형 : 요소1 + 요소2
ex)
 h1 + p {}
 
-> 이러면 <h1>태그 다음 처음으로 나오는 <p>태그에만 적용된다.


▶형제 선택자 -> 모든 형제 요소에 적용된다.
 기본형 : 요소1 ~ 요소2
ex)
h1 ~ p {}

-> <h1>태그 뒤에 나오는 모든 <p>태그에 적용된다. (형제 요소만)


◆속성 선택자

▶[속성]선택자 -> 특정 속성이 있는 요소를 선택
ex) a[href] {
}
-> a요소중 href속성이 있는 요소를 선택

▶[속성=속성값]선택자 -> 특정 속성값이 있는 요소를 선택
ex) a[target=_blank] {
}
-> a 요소중 target값이 _blank인 요소만 선택

▶[속성~=값]선택자 -> 여러 값 중 특정 속성값이 포함된 요소를 선택
ex) [class~=button] {
}
-> class값에 button글자가 들어가면 선택,완전히 일치해야함 뒤에 뭐 하나라도 붙으면 안됨 

▶[속성|=값]선택자 -> 특정 속성값이 포함된 요소를 선택
ex) a[title |=us] {
}

-> 'us'글자가 들어가면 선택, 뒤에 -같은거 붙어도 됨

▶[속성^=값]선택자 -> 특정 속성값으로 시작하는 속성 요소를 선택

▶[속성$=값]선택자 -> 특정 속성값으로 끝나는 속성의 요소를 선택
ex) a[href $= hwp] {}
->파일 선택할 때 유용

▶[속성*=값]선택자 -> 일부 속성값이 일치하는 요소를 선택
-> 어느 위치에 있는 값이 포함되어 있으면 선택


◆가상 클래스

사용자 동작에 반응해 스타일이 바꿔지도록 만들 수 있다.
ex) a:link{
}

▶:link -> 방문하지 않은 링크에 적용
▶:visited -> 방문한 링크에 적용
▶:hover -> 마우스 포인터 올려놨을 때 적용
▶:active -> 활성화 했을 때(클릭하는 동안)
▶:focus -> 초점이 맞추어 졌을 때(클릭하고나서, tab키를 이용해 입력 커서를 이동했을 때)
★ 위 순서대로 지정해야 오류가 없다.


▶:traget -> 앵커 대상에 스타일을 적용(같은 문서 안에서 다른 위치로 이동시 목적지가 되는 부분의 스타일을 지정)
ex)
	  #room:target{
		  color:yellow;
	  }
  </style>
</head>

<body>
        <li><a href="#room">객실 소개</a></li> 
        
	<div id="room">
		<h1>
			sssss
		</h1>
	</div>
 
</body>

->객실 소개 클릭시 sssss가 노란색으로 바뀜

▶:enabled -> 사용가능한 상태일 때 스타일 지정
▶:disabled -> 사용불가능한 상태일 때 스타일 지정

▶:checked -> 폼의 라디오 박스, 체크 박스에서 선택된 항목에 스타일 지정
ex)
input:checked {
	color:yellow;
}
<input type="radio" name="room" id="basic>
<label for="basic">체크</label>

-> 체크를 클릭시 체크가 노란색으로 바뀜

▶:not -> 특정 요소 제외하고 스타일 적용
input[type=text], input[type=tel] {} 과 input:not([type=radio]) {} 는 같음


◆구조 가상 클래스 

웹 문서 구조 기준으로 특정 위치에 있는 요소 찾아 스타일 적용할 때 사용

▶:only-child -> 부모 안에 자식 요소가 하나뿐일 때 자식 요소 선택
▶A:only-type-of -> 부모 안에 A요소가 하나뿐일 때 선택
▶:first-child -> 부모 안 모든 요소중 첫 번째 자식 요소 선택
▶:last-child -> 부모 안 모든 요소중 마지막 자식 요소 선택
▶A:first-of-type -> 부모 안 A 요소중 첫 번째 자식 요소 선택
▶A:last-of-type -> 부모 안 A 요소중 마지막 자식 요소 선택
▶:nth-child(n) -> 부모 안 모든 요소중 n번째 자식 선택
▶:nth-last-child(n) -> 부모 안 모든 요소중 뒤에서 n 번째 자식 선택
▶A:nth-of-type(n) -> 부모 안 A 요소중 n번째 자식 요소 선택
▶A:nth-last-of-type(n) -> 부모 안 A 요소중 뒤에서 n번째 자식 요소 선택

★수식을 사용해 지정가능
ex)
p:nth-child(odd) (2n+1) -> 홀수 번째 모두 선택
p:nth-child(even) (2n) -> 짝수 번째 모두 선택
