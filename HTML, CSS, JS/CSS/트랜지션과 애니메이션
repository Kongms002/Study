


◆transform -> 요소를 이동, 회전, 왜곡하는 속성

 ▶2차원 변형 함수
  ●translate(a,b) -> x축으로 a, y축으로 b이동
  ●translateX(a) -> x축으로 a이동
  ●translateY(b) -> y축으로 a이동
  ●scale(a,b) -> x축으로 a, y축으로 b만큼 확대,축소
  ●scaleX(a) -> x축으로 a만큼 확대,축소
  ●scaleY(b) -> y축으로 b만큼 확대,축소
  ●rotate(각도a)-> a만큼 회전(deg)
  ●skew(a,b) -> x축으로 a, y축으로 b만큼 왜곡
  ●skewX(a) -> x축으로 a만큼 왜곡 (각도값이 양수면 왼쪽이 올라감)
  ●skewY(b) -> y축으로 b만큼 왜곡 (각도값이 양수면 오른쪽이 올라감)
 ▶3차원 변형 함수 (z축은 앞뒤로 이동, 값이 커지면 사람이 보는쪽으로 이동
  ●translate3d(a,b,c) -> x축으로 a, y축으로 b, z축으로 c이동
  ●translateZ(c) -> z축으로 c이동
  ●scale3d(a,b,c) -> x축으로 a, y축으로 b, z축으로 c만큼 확대,축소
  ●scaleZ(a) -> z축으로 c만큼 확대,축소
  ●rotate(a,b,각도c)-> c만큼 회전
  ●rotate3d(a,b,c,각도d)-> d만큼 회전
  ●rotateX(각도c) -> c만큼 회전
  ●rotateY(각도c) -> c만큼 회전
  ●rotateZ(각도c) -> c만큼 회전
  ●perspective(길이) -> 입체적으로 보이게 깊이값 지정(0보다 커야하며 원래 있던 위치에서 사용자 있는 쪽으로 얼마나 이동하는지 픽셀로 나타냄 클수록 멀어짐)
  
ex) .movex:hover {
  transform : translateX(50px);
}
<div class="movex">
  aa
</div>
-> 마우스 닿으면 x축으로 50px이동



◆transition -> 스타일 바뀌는 시간을 조절하여 애니메이션 효과를 낼 수 있음

▶transition-property -> 트랜지션의 대상을 지정
 ●all -> 요소의 모든 속성 지정(기본값)
 ●none -> 트랜지션 하는동안 아무 것도 바뀌지 않음
 ●속성의 이름 -> 트랜지션을 적용할 속성을 지정, 여러개면 ','로 구분
  ex) transition-property:width; -> 너비에 트랜지션 적용
  
▶transition-duration -> 트랜지션 실행할 시간 지정
 ●여러개 쓸 수 있는데 이때는 속성 순서대로 시간이 적용됨
ex)
transition-property:width, height;
transition-duration:1s, 3s; 
 -> width는 1초동안, height는 3초동안 바뀜
 
▶transition-timing-function -> 트랜지션의 실행 형태 지정(속도 곡선 지정)
 ●ease -> 천천히 시작해 점점 빨라지다가 마지막엔 천천히 끝냄(기본값)
 ●linear -> 시작부터 끝까지 같은 속도로
 ●ease-in -> 느리게 시작
 ●ease-out -> 느리게 끝냄
 ●ease-in-out -> 느리게 시작하고 느리게 끝냄
 ●cubic-bezier(n,n,n,n) -> 베지어 함수를 지정해서 사용, 0~1사이 값만 사용 가능
 
▶transition-delay -> 트랜지션의 지연 시간 지정
 ●몇초뒤에 시작할지,기본값은 0초
 
▶transition -> 위 속성을 한꺼번에 지정
 ●속성 작성순서는 상관없으니 시간값이 2개 있으면 duration, delay순으로 적용됨



◆animation -> 트랜지션을 이용해서도 애니메이션을 만들 수 있으나 animation속성을 이용하면 더 쉽게 만들 수 있다.

▶@keyframes -> 애니메이션이 바뀌는 지점 정함(style안에서 지정)
ex)
@keyframes rotate{
 from{ height:100px;}
 50%{ height:150px;}
 to{ height:200px;}
}
-> from(0%)에서 to(100%) 까지 애니메이션을 지정함. 0%가 시작위치, 100%가 종료 위치임

▶animation-delay -> 시작시간 정함

▶animation-direction -> 애니메이션 종료후 처음부터 시작할지, 역방향으로 진행할지 정함
 ●normal -> 애니메이션을 from에서 to로 진행한다.(기본값)
 ●reverse -> to에서 from으로, 즉 반대로 진행한다.
 ●alternate -> 홀수 번째는 normal로, 짝수 번째는 reverse로 진행한다.
 ●alternate-reverse -> 홀수 번째는 reverse로, 짝수 번째는 normal로 진행한다.
 
▶animation-duration -> 실행 시간 정함

▶animation-iteration-count -> 반복 횟수 정함
 ●숫자 -> 그 숫자만큼 반복
 ●infinite ->무한 반복

▶animation-name -> @keyframe으로 설정해 애니메이션을 적용.
 ●애니메이션을 적용할 곳에 이걸 써줘야 함
 ex)
 animation-name:rotate;
 
▶animation-timing-function -> 키프레임의 전환 형태를 지정
 ●트랜지션과 마찬가지로 ease,linear,ease-in같은걸 써서 애니메이션 속도 지정 가능
 
▶animation -> 위 속성을 한꺼번에 지정 가능

애니메이션 예시

.box{
 backgroud-color:green;
 width:100px;
 height:100px;
 animation-name:color;
 animation-duration:1s;
}

@keyframes color{
 from{color:green;}
 to{color:red;}
}
<div class="box"></div>

->초록 정사각형이 빨간색으로 1초동안 바뀜

★애니메이션 여러개 동시에 지정시 ','쉼표로 구분해서 사용
