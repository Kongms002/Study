배열을 무언가로 채워 넣는 방법
1.for문을 하나하나 넣기 ->무난
2.cstring 헤더에 있는 memset이용-> memset(a,0,b): a=메모리 시작주소,0초기화할 값,b=길이 *0,-1말고 다른 값 넣으면 오작동가능
3.algorithm 헤더에 있는 fill이용-> fill(a,b,0): a=시작위치,b=끝나는 위치(b제외),0=초기화할 값

STL vector
특징
1.배열과 거의 비슷하지만 크기를 자유자재로 늘리거나 줄일 수 있다.
2.template사용하기 때문에 데이터 타입 자유롭게 넣을 수 있다.
3.메모리 heap에 생성되며 동적할당된다.
4.배열에 비해 속도가 느리지만 편리하다.

일단 #include<vector>로 헤더파일 추가

vector<int> v; -> 비어있는 int형 vector v를 생성
vector<int> v(5); -> 0으로 초기화된 원소를 5개 가지는 vector v를 생성
vector<int> v(5, 2); -> 2로 초기화된 원소를 5개 가지는 vector v를 생성
vector<int> v2(v1); -> vector v2는 vector v1을 복사하여 생성
v.assign(10, 1); -> vector v에 1의 값을 가진 원소10개 할당 *v(5, 2)과 비슷한거 같지만 이거는 생성이 아닌 초기화
v.at(idx); -> idx번째 원소를 참조(데이터 값 리턴)
v[idx]; -> idx번째 원소를 참조 *at보다 속도 빠름 but 안전x
v.front(); -> 첫번째 원소를 참조
v.back(); -> 마지막 원소를 참조
v.clear(); -> 모든 원소 제거 *메모리는 남아있음
v.push_back(2); -> 마지막 원소 뒤에 2를 추가한다.(삽입)
v.pop_back(); -> 마지막 원소를 제거
v.begin(); -> 첫번째 원소를 가리킴 (반복자(iterator)와 사용)
v.end(); -> 마지막 원소를 가리킴 (반복자(iterator)와 사용)
    vector v(5,2);
    for(vector<int>::iterator a=v.begin(); a!=v.end();a++)
        cout<<*a;
        출력: 22222
v.resize(n); -> vector v크기를 n으로 변경, 더 커지면 0으로 초기화
v.resize(n,3); -> vector v크기를 n으로 변경, 더 커지면 3을 초기화
v.size(); -> 원소의 갯수 리턴
v.capacity(); -> 할당된 공간의 크기 리턴 size와 다름 
v2.swap(v1); -> v2와 v1의 원소와 capacity를 바꿔준다.  *vector<int>().swap(v1); -> 메모리 해제(v1의 capacity없앰)
v.insert(2, 3); -> 2번째 위치에 3삽입(뒤의 원소는 뒤로 밀려남)
v.insert(2, 3, 4); -> 2번째 위치에 3개의 4를 삽입(뒤의 원소는 뒤로 밀려남)
v.erase(iter); iter가 가리키는 원소 제거 size만 줄고 capacity는 그대로 2개 인자로 주면 그 사이 범위 모두 제거
v.empty() -> vector v가 비었으면 true리턴 (size가0일경우)
